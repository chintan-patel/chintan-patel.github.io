<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>Passion</title><description>Stories, Tutorials, Tech updates and News</description><link>http://localhost:2368/</link><generator>Ghost 0.7</generator><lastBuildDate>Tue, 16 Feb 2016 04:22:35 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Basic Unix Commands for Geek</title><description>Blog is about basic unix commands which every developer must know. These commands will make you feel better and more professional.</description><link>http://localhost:2368/basic-unix-commands-for-geek/</link><guid isPermaLink="false">8e4f6c3a-82a8-4d0f-8c8e-fd825420553f</guid><category>unix</category><category>commands</category><category>vi editor</category><dc:creator>Chintan Patel</dc:creator><pubDate>Thu, 04 Feb 2016 03:56:41 GMT</pubDate><content:encoded>&lt;h1 id="introduction"&gt;Introduction&lt;/h1&gt;

&lt;p&gt;This document requires intermediate level of shell commands knowledge. For starters visit &lt;a href="http://mally.stanford.edu/~sr/computing/basic-unix.html"&gt;http://mally.stanford.edu/~sr/computing/basic-unix.html&lt;/a&gt;&lt;/p&gt;

&lt;h1 id="benefitsoflearning"&gt;Benefits of learning&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Look professional&lt;/li&gt;
&lt;li&gt;Quicker results&lt;/li&gt;
&lt;li&gt;No need of mouse and clicks&lt;/li&gt;
&lt;li&gt;Makes you feel good&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lets get started quickly...&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="http://localhost:2368/basic-unix-commands-for-geek/#basics"&gt;Basics&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://localhost:2368/basic-unix-commands-for-geek/#advanced"&gt;Advanced&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id="basics"&gt;Basics&lt;/h1&gt;

&lt;h3 id="commands"&gt;Commands&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://localhost:2368/basic-unix-commands-for-geek/#hostname"&gt;hostname&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://localhost:2368/basic-unix-commands-for-geek/#ls"&gt;ls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://localhost:2368/basic-unix-commands-for-geek/#rm"&gt;rm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://localhost:2368/basic-unix-commands-for-geek/#wc"&gt;wc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://localhost:2368/basic-unix-commands-for-geek/#grep"&gt;grep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://localhost:2368/basic-unix-commands-for-geek/#find"&gt;find&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://localhost:2368/basic-unix-commands-for-geek/#watch"&gt;watch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://localhost:2368/basic-unix-commands-for-geek/#top"&gt;top&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://localhost:2368/basic-unix-commands-for-geek/#tree"&gt;tree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="hostname"&gt;hostname&lt;/h2&gt;

&lt;p&gt;To get the hostname of the current system.&lt;/p&gt;

&lt;h2 id="ls"&gt;ls&lt;/h2&gt;

&lt;h3 id="lsltra"&gt;ls -ltra&lt;/h3&gt;

&lt;p&gt;Say it loud &lt;strong&gt;&lt;em&gt;l s minus l t r a&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Always use &lt;code&gt;ls -ltra&lt;/code&gt; for listing directories, it will show all hidden as well as arrange files as per last modified date.&lt;/p&gt;

&lt;h2 id="rm"&gt;rm&lt;/h2&gt;

&lt;h3 id="rmrffiledirectory"&gt;rm -rf &lt;file directory=""&gt;&lt;/file&gt;&lt;/h3&gt;

&lt;p&gt;Say it loud &lt;strong&gt;&lt;em&gt;r m minus r f&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Used to remove directory/files forcefully. &lt;/p&gt;

&lt;p&gt;Must be used carefully, as it deletes &lt;em&gt;all files and folders&lt;/em&gt; within directory without prompt&lt;/p&gt;

&lt;h2 id="wc"&gt;wc&lt;/h2&gt;

&lt;h3 id="wcl"&gt;wc -l&lt;/h3&gt;

&lt;p&gt;Say it loud &lt;strong&gt;&lt;em&gt;w c minus l&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It will count number of lines in a file&lt;/p&gt;

&lt;h2 id="grep"&gt;grep&lt;/h2&gt;

&lt;h3 id="grepsearchstringfilename"&gt;&lt;code&gt;grep "&amp;lt;search string&amp;gt;" &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Say it loud &lt;strong&gt;&lt;em&gt;grep&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Grep will search the string in the file and will print the line to standard output&lt;/p&gt;

&lt;h2 id="find"&gt;find&lt;/h2&gt;

&lt;h3 id="findtypef"&gt;find . -type f&lt;/h3&gt;

&lt;p&gt;Say it loud &lt;strong&gt;&lt;em&gt;find dot minus type f&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;find&lt;/code&gt; - command&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt; - current directory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-type f&lt;/code&gt; - Only list files alternatively use &lt;code&gt;type -d&lt;/code&gt; to find only directories&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;List all the files recursively in all folders of current directory.&lt;/p&gt;

&lt;h2 id="watch"&gt;watch&lt;/h2&gt;

&lt;h3 id="watchcommand"&gt;&lt;code&gt;watch &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Say it loud &lt;code&gt;watch&lt;/code&gt; &lt;br&gt;
This command will re-run the command every 2 secs (by default). &lt;/p&gt;

&lt;p&gt;Its good when you want to monitor or watch for files. eg. execute this command  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir new_dir  
cd new_dir  
watch "ls -tlra"`  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and open another terminal window  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd new_dir  
touch new_file  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The first window will show the new file added within 2 seconds.&lt;/p&gt;

&lt;p&gt;For OSX, use &lt;code&gt;brew install watch&lt;/code&gt; if command does not work&lt;/p&gt;

&lt;h2 id="top"&gt;top&lt;/h2&gt;

&lt;p&gt;Say it loud &lt;code&gt;top&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;Its command line activity monitor/ task manager for terminal&lt;/p&gt;

&lt;p&gt;Suprise yourself with &lt;code&gt;brew install htop&lt;/code&gt; and then use &lt;code&gt;htop&lt;/code&gt; instead.&lt;/p&gt;

&lt;h2 id="tree"&gt;tree&lt;/h2&gt;

&lt;h3 id="treel2"&gt;tree -L 2&lt;/h3&gt;

&lt;p&gt;Say it loud &lt;code&gt;tree minus L two&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It will generate a tree view for directories and files with level 2&lt;/p&gt;

&lt;p&gt;Install via &lt;code&gt;brew install tree&lt;/code&gt;&lt;/p&gt;

&lt;h1 id="advanced"&gt;Advanced&lt;/h1&gt;

&lt;h2 id="combinefindandgrepcommand"&gt;Combine find and grep command&lt;/h2&gt;

&lt;p&gt;List all the files in current directory with &lt;code&gt;.js&lt;/code&gt; file extension&lt;/p&gt;

&lt;p&gt;&lt;code&gt;find . -type f | grep ".js$"&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="combinefindxargsandgrepcommand"&gt;Combine find, xargs and grep command&lt;/h2&gt;

&lt;p&gt;List all the files in current directory with 'foo' word&lt;/p&gt;

&lt;p&gt;&lt;code&gt;find . -type f | xargs grep "foo"&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="combinefindxargsandgrepcommandwithexcludesomefolders"&gt;Combine find, xargs and grep command with exclude some folders&lt;/h2&gt;

&lt;p&gt;List all the files in current directory with 'foo' word except file path having in &lt;code&gt;node_modules&lt;/code&gt; and &lt;code&gt;bower_components&lt;/code&gt; folder&lt;/p&gt;

&lt;p&gt;&lt;code&gt;find . -type f | egrep -v "\/node_modules\/|\/bower_components\/" | xargs grep "foo"&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="searchmultiplestringsinlistoffiles"&gt;Search multiple strings in list of files&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;find . -type f | xargs egrep "foo|bar"&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="searchmultiplestringinlistoffileswhereallpatternsareinafile"&gt;Search multiple string in list of files where all patterns are in a file&lt;/h2&gt;

&lt;p&gt;Create a file with string needs to be searched for:  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat lookup-patterns-file
Output:  
foo  
bar  
matching-pattern  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Search for all strings matching in file &lt;code&gt;lookup-patterns-file&lt;/code&gt; against folders&lt;/p&gt;

&lt;p&gt;&lt;code&gt;find . -type f | xargs grep -f patterns-file&lt;/code&gt;&lt;/p&gt;</content:encoded></item><item><title>Comparing Package manager</title><description>Comparing the package manager for Node, Ruby and PHP, includes, default public repository, dependency command, dependency lock, etc.</description><link>http://localhost:2368/comparing-npm-with-ruby/</link><guid isPermaLink="false">7f18dec7-3d98-43e1-8bd7-cca04915db7b</guid><category>npm</category><category>bundler</category><category>composer</category><dc:creator>Chintan Patel</dc:creator><pubDate>Tue, 02 Feb 2016 04:38:34 GMT</pubDate><content:encoded>&lt;p&gt;Following is the comparison in the different language:  &lt;/p&gt;

&lt;table&gt;  
&lt;thead&gt;  
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;Node&lt;/th&gt;
    &lt;th&gt;Ruby&lt;/th&gt;
    &lt;th&gt;PHP&lt;/th&gt;
&lt;/thead&gt;  
&lt;tbody&gt;  
&lt;tr&gt;  
    &lt;td&gt;Package Manager&lt;/td&gt;
    &lt;td&gt;NPM&lt;/td&gt;
    &lt;td&gt;Bundle&lt;/td&gt;
    &lt;td&gt;Composer&lt;/td&gt;
&lt;/tr&gt;  
&lt;tr&gt;  
    &lt;td&gt;Install dependencies&lt;/td&gt;
    &lt;td&gt;npm install&lt;/td&gt;
    &lt;td&gt;bundle install&lt;/td&gt;
    &lt;td&gt;composer.phar&lt;/td&gt;
&lt;/tr&gt;  
&lt;tr&gt;  
    &lt;td&gt;Dependency file&lt;/td&gt;
    &lt;td&gt;package.json&lt;/td&gt;
    &lt;td&gt;Gemfile&lt;/td&gt;
    &lt;td&gt;composer.json&lt;/td&gt;
&lt;/tr&gt;  
&lt;tr&gt;  
    &lt;td&gt;Locking Dependencies&lt;/td&gt;
    &lt;td&gt;npm-shrinkwrap&lt;/td&gt;
    &lt;td&gt;Gemfile.lock&lt;/td&gt;
    &lt;td&gt;composer.lock&lt;/td&gt;
&lt;/tr&gt;  
&lt;tr&gt;  
    &lt;td&gt;Public Repository&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://www.npmjs.com"&gt;https://www.npmjs.com&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://rubygems.org/"&gt;https://rubygems.org/&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://packagist.org/"&gt;https://packagist.org/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;  
&lt;/tbody&gt;  
&lt;/table&gt;</content:encoded></item><item><title>About Me</title><description>&lt;p&gt;I am a Full-Stack Developer and geek who is well experienced with Mongo-Express-Angular-Node (MEAN) and Unix/Linux-Apache-MySQL-PHP (LAMP) stack. &lt;/p&gt;

&lt;h2 id="breakingtheice"&gt;Breaking the Ice&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I am Passionate about Object-Oriented Programming &lt;code&gt;(OOP)&lt;/code&gt; for front-end JS framework like &lt;code&gt;AngularJS&lt;/code&gt; and back-end scripts like &lt;code&gt;(PHP/JavaScript)&lt;/code&gt;. Undoubtedly worked on &lt;code&gt;HTML/CSS&lt;/code&gt;, also, knows all &lt;code&gt;IE&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://localhost:2368/chintan-patel-resume/</link><guid isPermaLink="false">2289b587-e35f-410b-8209-f7c429e2ad8f</guid><category>Resume</category><dc:creator>Chintan Patel</dc:creator><pubDate>Mon, 21 Dec 2015 17:23:00 GMT</pubDate><content:encoded>&lt;p&gt;I am a Full-Stack Developer and geek who is well experienced with Mongo-Express-Angular-Node (MEAN) and Unix/Linux-Apache-MySQL-PHP (LAMP) stack. &lt;/p&gt;

&lt;h2 id="breakingtheice"&gt;Breaking the Ice&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I am Passionate about Object-Oriented Programming &lt;code&gt;(OOP)&lt;/code&gt; for front-end JS framework like &lt;code&gt;AngularJS&lt;/code&gt; and back-end scripts like &lt;code&gt;(PHP/JavaScript)&lt;/code&gt;. Undoubtedly worked on &lt;code&gt;HTML/CSS&lt;/code&gt;, also, knows all &lt;code&gt;IE Quirks&lt;/code&gt;. I am aware of CSS preprocessors like &lt;code&gt;SASS&lt;/code&gt;, &lt;code&gt;LESS&lt;/code&gt;, etc., used with &lt;code&gt;Bootstrap 2/3&lt;/code&gt;, &lt;code&gt;foundation&lt;/code&gt; or &lt;code&gt;material design&lt;/code&gt;. In the past, I have used third-party bower components using &lt;code&gt;bower&lt;/code&gt; package manager.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I am convinced that, using &lt;code&gt;NodeJS&lt;/code&gt;, I can do anything from integrating &lt;code&gt;Raspberry PI&lt;/code&gt; or &lt;code&gt;Arduino&lt;/code&gt; to make a highly scalable clusters of the server network. The HTTP middleware &lt;code&gt;Express&lt;/code&gt; and &lt;code&gt;Restify&lt;/code&gt;, makes it possible to interact with the additional functionality to Node's performance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I have contributed to Design and development of &lt;code&gt;RESTful API's&lt;/code&gt;, these APIs handled user security using JWT token strategy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Full understanding of database architecture with NoSQL and RDMS databases like &lt;code&gt;MongoDB&lt;/code&gt; and &lt;code&gt;MySQL&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I am very glad to work on &lt;code&gt;Amazon Web Service&lt;/code&gt; (AWS), with different products listed below:&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;To execute my application used &lt;code&gt;Elastic Cloud Compute (EC2)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To store my images, videos and files used &lt;code&gt;Simple Storage Service (S3)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To send email with guarantee delivery to the User's mailbox using &lt;code&gt;Simple Email Service (SES)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To schedule automatic tasks for encoding videos, audio and other document files to different formats &lt;code&gt;Simple Workflow service (SWF)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;MySQL database was hosted in &lt;code&gt;Redundant Database Service (RDS)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To add content to CDN used &lt;code&gt;Amazon CloudFront&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Used &lt;code&gt;Amazon CloudSearch&lt;/code&gt; to add search functionality on website&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="methodology"&gt;Methodology&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Our team follows &lt;code&gt;Agile&lt;/code&gt; and &lt;code&gt;SCRUM&lt;/code&gt; development process&lt;/li&gt;
&lt;li&gt;Bi-weekly Iterations using Version One, JIRA, etc.&lt;/li&gt;
&lt;li&gt;Initially, used Waterfall model&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="workexperience"&gt;Work Experience&lt;/h2&gt;

&lt;h5 id="srassociate"&gt;Sr. Associate&lt;/h5&gt;

&lt;p&gt;at &lt;em&gt;Cognizant Technology Solutions&lt;/em&gt; worked from May '15&lt;/p&gt;

&lt;p&gt;The Digital Works space at Cognizant Technology Solutions provides services to Entertainment and Media companies to explore and start movement towards the new emerging technology like Cloud service, Mobile Apps and Analytics.&lt;/p&gt;

&lt;p&gt;Since May '15, I am working as Software Architect at &lt;strong&gt;Walt Disney Parks and Resorts, Orlando, FL&lt;/strong&gt;, to help develop Reference Architecture implementation of Single Page Application (SPA) and RESTful API server. Also, make some prescriptions and documents, for delivery teams to follow the standards and enhance with greater efficiency and resources. Below are the tasks listed of my day-to-day activities:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Worked on Internationalization&lt;code&gt;(i18n)&lt;/code&gt; and Localization&lt;code&gt;(l10n)&lt;/code&gt; techniques&lt;/li&gt;
&lt;li&gt;Reusable code blocks using &lt;code&gt;yeoman&lt;/code&gt; generators&lt;/li&gt;
&lt;li&gt;Identify / Debug / Resolved Coding errors in NodeJS and AngularJS for delivery teams&lt;/li&gt;
&lt;li&gt;Provide proper knowledge stream to other developers by internal company Web Cast&lt;/li&gt;
&lt;li&gt;Improve Code Quality and Code Coverage if required for certain critical projects&lt;/li&gt;
&lt;li&gt;Adding new features to existing applications or generators&lt;/li&gt;
&lt;li&gt;Helping teams with writing Unit Test cases for Angular and NodeJS in &lt;code&gt;karma&lt;/code&gt;, &lt;code&gt;mocha&lt;/code&gt; and &lt;code&gt;chai&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;Docker&lt;/code&gt; container to deploy the applications locally. These application later gets deployed at AWS Cloud or Disney's enterprise data center.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="softwareengineer"&gt;Software Engineer&lt;/h4&gt;

&lt;p&gt;at &lt;em&gt;&lt;a href="https://www.tenlegs.com"&gt;Tenlegs, LLC&lt;/a&gt;&lt;/em&gt; worked from Feb '11 - May '15&lt;/p&gt;

&lt;p&gt;Tenlegs provides an innovative platform that brings together members of a school community onto one trusted network. We do this with a privately-branded online network that enables individuals to connect and collaborate, regardless of geography or discipline empowering schools to extend their presence globally.&lt;/p&gt;

&lt;p&gt;I have worked at Tenlegs.com (my third startup experience), for more than 4 years  as full-stack software developer. The technology includes - Linux, Apache web server, MySQL database and PHP language Stack, AngularJS, jQuery and Amazon AWS.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Introduced Angular / Node in new projects which improved the quality of product&lt;/li&gt;
&lt;li&gt;Integrated vendor-based payment gateway using Paypal and Stripe APIs&lt;/li&gt;
&lt;li&gt;Contributed to project for white labelling the client's website experience&lt;/li&gt;
&lt;li&gt;Converted the whole site to CDN using Amazon Cloudfront and Amazon S3 services improved the image rendering to 20%.&lt;/li&gt;
&lt;li&gt;Worked on CloudFront for Streaming the Video rather than progressive download, saving 30% of cost.&lt;/li&gt;
&lt;li&gt;Improved the Video/Audio encoding time to 50% by moving the services to Amazon SWF from batch processes&lt;/li&gt;
&lt;li&gt;Helped in the development of Deployment workflow for the releases reducing the downtime of the portal&lt;/li&gt;
&lt;li&gt;Followed Agile process of development and co-ordinated with offshore team&lt;/li&gt;
&lt;li&gt;Added new features to in-house PHP framework&lt;/li&gt;
&lt;li&gt;Worked with UX team to create a pixel perfect HTML views&lt;/li&gt;
&lt;li&gt;Migrated the source code repository from &lt;code&gt;svn&lt;/code&gt; with &lt;code&gt;git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Migrated the UI from Bootstrap v2 to Bootstrap v3&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>